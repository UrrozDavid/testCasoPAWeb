@model TBA.Models.Entities.Notification

@using System.Collections.Generic
@{
    ViewData["Title"] = "Edit Notification";
    var users = ViewBag.Users as List<TBA.Models.Entities.User>;
    var cards = ViewBag.Cards as List<TBA.Models.Entities.Card>;
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Edit Notification</h2>

    @* Feedback si no llegaron datos *@
    @if (users == null)
    {
        <div class="alert alert-danger">No se cargaron usuarios. Verifica el controlador.</div>
    }
    @if (cards == null)
    {
        <div class="alert alert-danger">No se cargaron tarjetas. Verifica el controlador.</div>
    }

    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <form asp-action="Edit" method="post" novalidate>
                <input type="hidden" asp-for="NotificationId" />
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <div class="mb-3">
                    <label asp-for="UserId" class="form-label"></label>
                    <select asp-for="UserId" class="form-select">
                        <option value="">-- Seleccione Usuario --</option>
                        @if (users != null)
                        {
                            foreach (var u in users)
                            {
                                var selected = Model.UserId == u.UserId ? "selected" : "";
                                <option value="@u.UserId" selected="@selected">@u.Email</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="UserId" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="CardId" class="form-label"></label>
                    <select asp-for="CardId" class="form-select">
                        <option value="">-- Seleccione Tarjeta --</option>
                        @if (cards != null)
                        {
                            foreach (var c in cards)
                            {
                                var selected = Model.CardId == c.CardId ? "selected" : "";
                                <option value="@c.CardId" selected="@selected">@c.Title</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="CardId" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Message" class="form-label"></label>
                    <input asp-for="Message" class="form-control" placeholder="Enter notification message" />
                    <span asp-validation-for="Message" class="text-danger"></span>
                </div>

                <div class="mb-4">
                    <label asp-for="NotifyAt" class="form-label"></label>
                    <input asp-for="NotifyAt" type="datetime-local" class="form-control" />
                    <span asp-validation-for="NotifyAt" class="text-danger"></span>
                </div>
                <div class="mb-4">
                    <label asp-for="IsRead" class="form-label"></label>
                    <select asp-for="IsRead" class="form-select">
                        <option value="false">No</option>
                        <option value="true">Yes</option>
                    </select>
                    <span asp-validation-for="IsRead" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary w-100 rounded-pill">Save Changes</button>
                <a asp-action="Index" class="btn btn-link mt-2">Back to List</a>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
